/** 表計算ソフトの自動再計算機能のようなものを提供します。
 *
 * これはObervableパターンの派生ですが、Observerの状態Subject。
 *
 * 変数同士の依存関係を定義することで、依存元が変更されたときに、それに依存先の変数の再評価を行わせることができます。
 * Subjectの状態に対する自身の状態を関数従属的に定義することで、副作用の影響を受けにくくすることができます。
 *
 * このライブラリを最大限に活用するには、「データモデル」を専門に扱うクラスと組み合わせるようにしてください。
 *
 * SubjectからObserverへの参照は弱参照になっています。その上、相互参照は半自動的に管理されるため、利用者が明示的にadd/deleteObserverを行う必要はありません。
 * しかし、Subject以外のどこからも参照されなくなったLinkableオブジェクトは自然に消滅してしまうため、通常のObserverのように扱う場合であっても、強参照を残しておく必要があります。
 *
 * このシステムはObservableパターンの派生なので、SubjectとObserverは相互参照を持ちます。
 * そのため、Subjectに不要になったObserverを破棄させないと、メモリリークを起こしてしまいます。
 * しかし、Observerが不要になったかどうかの判断を利用者が行うのは難しく、C++のメモリ管理と同様の負担を強いることになります。
 * その対策として、SubjectからObserverへの参照が弱参照となっています。
 *
 * @author teneur lafkareine */

package lafkareine.util.linkage;